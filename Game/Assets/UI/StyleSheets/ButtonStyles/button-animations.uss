/* AIDEV-NOTE: Button styles for Unity UI Toolkit compatibility
   NOTE: Unity UI Toolkit does NOT support:
   - CSS animations (@keyframes)
   - CSS transitions
   - transform properties
   - box-shadow
   - pseudo-elements (::before, ::after)
   
   All animations must be implemented via C# scripting */

/* =================================
   BASIC BUTTON STATES (UNITY COMPATIBLE)
   ================================= */

.btn {
    /* Basic styling only - no transitions */
    background-color: var(--color-secondary-bg);
    border-color: var(--color-border);
    border-width: var(--border-width-thin);
    border-radius: var(--border-radius-medium);
    color: var(--color-text-primary);
}

.btn:hover {
    background-color: var(--color-hover);
    border-color: var(--color-accent);
}

.btn:active {
    background-color: var(--color-active);
}

/* =================================
   BUTTON STATE INDICATORS (NO ANIMATIONS)
   ================================= */

.btn-loading {
    /* Loading state styling */
    opacity: 0.7;
    /* Note: Spinner animation must be implemented in C# */
}

.btn-loading .btn-text {
    opacity: 0.6;
}

.btn-spinner {
    /* Static spinner styling - rotation via C# */
    width: var(--icon-size-medium);
    height: var(--icon-size-medium);
    border: 2px solid var(--color-border);
    border-top-color: var(--color-accent);
    border-radius: 50%;
}

.btn-small .btn-spinner {
    width: var(--icon-size-small);
    height: var(--icon-size-small);
    border-width: 1px;
}

.btn-large .btn-spinner {
    width: var(--icon-size-large);
    height: var(--icon-size-large);
    border-width: 3px;
}

/* =================================
   VISUAL FEEDBACK CLASSES (STATIC)
   ================================= */

.btn-pulse {
    /* Highlight state - pulse effect via C# */
    border-color: var(--color-accent);
    border-width: var(--border-width-medium);
}

.btn-bounce {
    /* Success feedback - bounce effect via C# */
    background-color: var(--color-accent);
    color: var(--color-primary-bg);
}

.btn-shake {
    /* Error feedback - shake effect via C# */
    border-color: var(--color-destructive);
    background-color: var(--color-destructive);
    color: var(--color-text-primary);
}

.btn-glow {
    /* Highlighted state - glow effect via C# */
    border-color: var(--color-focus);
    border-width: var(--border-width-medium);
    background-color: var(--color-accent-bg);
}

/* =================================
   ACCESSIBILITY CLASSES
   ================================= */

.btn-no-animation {
    /* Placeholder for reduced motion preference */
    /* All animation handling should be in C# anyway */
}

/* =================================
   UTILITY CLASSES
   ================================= */

.btn-lift {
    /* Hover lift effect - implement via C# if needed */
    /* Unity UI Toolkit doesn't support transform */
}

.btn-ripple {
    /* Click ripple effect - implement via C# */
    /* Unity UI Toolkit doesn't support pseudo-elements */
}

.btn-fade-in,
.btn-fade-out,
.btn-scale-in,
.btn-scale-out,
.btn-slide-in-left,
.btn-slide-in-right {
    /* Animation classes - implement via C# */
    /* Unity UI Toolkit doesn't support CSS animations */
}

/* =================================
   NOTES FOR DEVELOPERS
   ================================= */

/* 
IMPORTANT: Unity UI Toolkit Limitations

1. NO CSS Animations:
   - @keyframes not supported
   - animation property not supported
   - Use C# Tweening libraries (DOTween, LeanTween) or Unity's UIElements animation system

2. NO CSS Transitions:
   - transition property not supported
   - Use C# for smooth state changes

3. NO Transform Properties:
   - transform: rotate(), scale(), translate() not supported
   - Use Unity's transform system via C#

4. NO Advanced CSS:
   - box-shadow not supported
   - backdrop-filter not supported
   - cursor property not supported
   - pseudo-elements (::before, ::after) not supported

5. Recommended Approach:
   - Use USS for static styling only
   - Implement all animations and transitions in C#
   - Use Unity's UIElements animation API or third-party tweening libraries
*/